name: Release

on:
  create:
    tags:
      - v*.*.*

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    env:
      PIPENV_VENV_IN_PROJECT: 1

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9' 
          architecture: 'x64' 
      - name: Install pipenv
        run: python -m pip install --upgrade pipenv wheel
      - name: Install dependencies
        run: pipenv install
      - name: Building exe
        run: pipenv run pyinstaller --onefile main.py --name rocketchat_postmessage_cli_${{matrix.os}}
      - uses: actions/upload-artifact@v2
        with:
          name: dist-artifacts
          path: dist

  create-release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Download pre-build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist-artifacts
      - name: Get the version
        id: get_version
        run: |
          TAG_NAME=${{github.ref_name}}
          echo ::set-output name=VERSION::${TAG_NAME//./_}
      - name: Adding version to binaries
        run: |
          mv rocketchat_postmessage_cli_windows-latest.exe rocketchat_postmessage_cli_win_${{ steps.get_version.outputs.VERSION }}.exe
          mv rocketchat_postmessage_cli_ubuntu-latest rocketchat_postmessage_cli_ubuntu_${{ steps.get_version.outputs.VERSION }}
          mv rocketchat_postmessage_cli_macos-latest rocketchat_postmessage_cli_macos_${{ steps.get_version.outputs.VERSION }}
      - name: Publish Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            rocketchat_postmessage_cli_win_${{ steps.get_version.outputs.VERSION }}.exe
            rocketchat_postmessage_cli_ubuntu_${{ steps.get_version.outputs.VERSION }}
            rocketchat_postmessage_cli_macos_${{ steps.get_version.outputs.VERSION }}
          draft: true

